//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.03 at 01:56:44 PM CEST 
//


package ch.sbi.scraper.datatypes.marshalling;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ch.sbi.scraper.DataTypes package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ch.sbi.scraper.DataTypes
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Flags }
     * 
     */
    public Flags createFlags() {
        return new Flags();
    }

    /**
     * Create an instance of {@link java.lang.Thread }
     * 
     */
    public Thread createThread() {
        return new Thread();
    }

    /**
     * Create an instance of {@link Post }
     * 
     */
    public Post createPost() {
        return new Post();
    }

    /**
     * Create an instance of {@link Board }
     * 
     */
    public Board createBoard() {
        return new Board();
    }

    /**
     * Create an instance of {@link Category }
     * 
     */
    public Category createCategory() {
        return new Category();
    }

    /**
     * Create an instance of {@link Post.Message }
     * 
     */
    public Post.Message createPostMessage() {
        return new Post.Message();
    }

    /**
     * Create an instance of {@link Post.Message.Edited }
     * 
     */
    public Post.Message.Edited createPostMessageEdited() {
        return new Post.Message.Edited();
    }

    /**
     * Create an instance of {@link InCategory }
     * 
     */
    public InCategory createInCategory() {
        return new InCategory();
    }

    /**
     * Create an instance of {@link Date }
     * 
     */
    public Date createDate() {
        return new Date();
    }

    /**
     * Create an instance of {@link Flags.IsClosed }
     * 
     */
    public Flags.IsClosed createFlagsIsClosed() {
        return new Flags.IsClosed();
    }

    /**
     * Create an instance of {@link Flags.IsHidden }
     * 
     */
    public Flags.IsHidden createFlagsIsHidden() {
        return new Flags.IsHidden();
    }

    /**
     * Create an instance of {@link Flags.IsSticky }
     * 
     */
    public Flags.IsSticky createFlagsIsSticky() {
        return new Flags.IsSticky();
    }

    /**
     * Create an instance of {@link Flags.IsImportant }
     * 
     */
    public Flags.IsImportant createFlagsIsImportant() {
        return new Flags.IsImportant();
    }

    /**
     * Create an instance of {@link Flags.IsAnnouncement }
     * 
     */
    public Flags.IsAnnouncement createFlagsIsAnnouncement() {
        return new Flags.IsAnnouncement();
    }

    /**
     * Create an instance of {@link Flags.IsGlobal }
     * 
     */
    public Flags.IsGlobal createFlagsIsGlobal() {
        return new Flags.IsGlobal();
    }

    /**
     * Create an instance of {@link Flags.IsUnread }
     * 
     */
    public Flags.IsUnread createFlagsIsUnread() {
        return new Flags.IsUnread();
    }

    /**
     * Create an instance of {@link Icon }
     * 
     */
    public Icon createIcon() {
        return new Icon();
    }

    /**
     * Create an instance of {@link Threads }
     * 
     */
    public Threads createThreads() {
        return new Threads();
    }

    /**
     * Create an instance of {@link Thread.NumberOfReplies }
     * 
     */
    public Thread.NumberOfReplies createThreadNumberOfReplies() {
        return new Thread.NumberOfReplies();
    }

    /**
     * Create an instance of {@link Thread.NumberOfHits }
     * 
     */
    public Thread.NumberOfHits createThreadNumberOfHits() {
        return new Thread.NumberOfHits();
    }

    /**
     * Create an instance of {@link InBoard }
     * 
     */
    public InBoard createInBoard() {
        return new InBoard();
    }

    /**
     * Create an instance of {@link Thread.Firstpost }
     * 
     */
    public Thread.Firstpost createThreadFirstpost() {
        return new Thread.Firstpost();
    }

    /**
     * Create an instance of {@link Posts }
     * 
     */
    public Posts createPosts() {
        return new Posts();
    }

    /**
     * Create an instance of {@link User }
     * 
     */
    public User createUser() {
        return new User();
    }

    /**
     * Create an instance of {@link Avatar }
     * 
     */
    public Avatar createAvatar() {
        return new Avatar();
    }

    /**
     * Create an instance of {@link InThread }
     * 
     */
    public InThread createInThread() {
        return new InThread();
    }

    /**
     * Create an instance of {@link Boards }
     * 
     */
    public Boards createBoards() {
        return new Boards();
    }

    /**
     * Create an instance of {@link Board.NumberOfThreads }
     * 
     */
    public Board.NumberOfThreads createBoardNumberOfThreads() {
        return new Board.NumberOfThreads();
    }

    /**
     * Create an instance of {@link Board.NumberOfReplies }
     * 
     */
    public Board.NumberOfReplies createBoardNumberOfReplies() {
        return new Board.NumberOfReplies();
    }

    /**
     * Create an instance of {@link Board.Lastpost }
     * 
     */
    public Board.Lastpost createBoardLastpost() {
        return new Board.Lastpost();
    }

    /**
     * Create an instance of {@link Board.Moderators }
     * 
     */
    public Board.Moderators createBoardModerators() {
        return new Board.Moderators();
    }

    /**
     * Create an instance of {@link Categories }
     * 
     */
    public Categories createCategories() {
        return new Categories();
    }

    /**
     * Create an instance of {@link Category.Boards }
     * 
     */
    public Category.Boards createCategoryBoards() {
        return new Category.Boards();
    }

    /**
     * Create an instance of {@link Post.Message.Edited.Lastedit }
     * 
     */
    public Post.Message.Edited.Lastedit createPostMessageEditedLastedit() {
        return new Post.Message.Edited.Lastedit();
    }

}
